[user]
	name = Raúl Romero García
	email = rromerogar@uoc.edu
	signingkey = 5861F7B3FE0BD3B62C4CAF45B4BA81804DC8740E
[push]
	default = simple

[core]
	editor = vi
	precomposeunicode = true
	autocrlf = input
	ignorecase = false

[color]
	ui = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "status"]
	added = green
	changed = yellow
	untracked = cyan

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[alias]
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p
	graph = log --graph --pretty=oneline --abbrev-commit
	amend = commit --amend --no-edit
	gpt = !`git gc && git push --all --recurse-submodules=on-demand && git push --tags --recurse-submodules=on-demand`
	vlog = !git log --graph --oneline --decorate --date=relative --all
	oldest-ancestor = !zsh -c 'diff -u <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | sed -ne \"s/^ //p\" | head -1' -
	
	# Destroys all tracked and untracked changes
	fire = "!f() { git reset --hard; git clean -f -d; }; f"
	
	# Deletes local merged branches except for master and develop
	bclean = "!git branch --merged | grep -v \"*\" | grep -v master | grep -v develop | xargs -n 1 git branch -d"
	
	# Deletes local merged branches (bclean) and branches remote references to deleted branches
	roomba = "!f() { git fetch --prune; git bclean ; }; f"
	
	# Commits current changes with a "WIP" message
	wip = commit -a -m "WIP"

	# Soft resets last commit (reverses the command wip)
	unwip = reset --soft HEAD^

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	# Prints the body of all commits since last tag (PR title when used with GitHub merge&squash)
	changelog = "!f() { git describe --abbrev=0 --tags | xargs -I {} git log {}..HEAD --format=%s; }; f"

	# Push tags and master after preparing a release
	release = "!f() { git flow release finish && git push --all && git push --tags; }; f"
[commit]
	gpgsign = true
	template = /home/raul/.git_commit_template
[gpg]
	program = /usr/local/bin/gpg
